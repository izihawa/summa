syntax = "proto3";
package summa.proto;

import "query.proto";


// Searches documents in the stored indices
service SearchApi {
  // Make search in Summa
  rpc search (SearchRequest) returns (SearchResponse) {}
}

message SearchRequest {
  // List of index queries. Multiple queries will be merged into a single list
  repeated IndexQuery index_queries = 1;
  // Tags for logging purposes
  map<string, string> tags = 2;
}

message IndexQuery {
  // The index name or alias
  string index_alias = 1;
  // Query DSL. Use `MatchQuery` to pass a free-form query
  Query query = 2;
  // Every collector is responsible of processing and storing documents and/or their derivatives (like counters)
  // to return them to the caller
  repeated Collector collectors = 3;
  // Is requiring fieldnorms needed for the query?
  optional bool is_fieldnorms_scoring_enabled = 4;
}
