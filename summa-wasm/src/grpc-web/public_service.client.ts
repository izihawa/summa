// @generated by protobuf-ts 2.9.1 with parameter use_proto_field_name
// @generated from protobuf file "public_service.proto" (package "summa.proto", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PublicApi } from "./public_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SearchResponse } from "./query";
import type { SearchRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Searches documents in the stored indices
 *
 * @generated from protobuf service summa.proto.PublicApi
 */
export interface IPublicApiClient {
    /**
     * Make search in Summa
     *
     * @generated from protobuf rpc: search(summa.proto.SearchRequest) returns (summa.proto.SearchResponse);
     */
    search(input: SearchRequest, options?: RpcOptions): UnaryCall<SearchRequest, SearchResponse>;
}
/**
 * Searches documents in the stored indices
 *
 * @generated from protobuf service summa.proto.PublicApi
 */
export class PublicApiClient implements IPublicApiClient, ServiceInfo {
    typeName = PublicApi.typeName;
    methods = PublicApi.methods;
    options = PublicApi.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Make search in Summa
     *
     * @generated from protobuf rpc: search(summa.proto.SearchRequest) returns (summa.proto.SearchResponse);
     */
    search(input: SearchRequest, options?: RpcOptions): UnaryCall<SearchRequest, SearchResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SearchRequest, SearchResponse>("unary", this._transport, method, opt, input);
    }
}
