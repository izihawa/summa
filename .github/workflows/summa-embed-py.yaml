name: summa-embed-py
on:
  release:
    types: [ published ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        package: ["summa-embed-py", "ipfs-hamt-directory-py"]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist -m ${{ matrix.package }}/Cargo.toml
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          args: --release --target universal2-apple-darwin --out dist -m ${{ matrix.package }}/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        package: ["summa-embed-py", "ipfs-hamt-directory-py"]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m ${{ matrix.package }}/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ["summa-embed-py", "ipfs-hamt-directory-py"]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        target: [ x64 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: -i ${{ matrix.python-version }} --release --out dist -m ${{ matrix.package }}/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ["summa-embed-py", "ipfs-hamt-directory-py"]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        target: [aarch64, armv7]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: -i ${{ matrix.python-version }} --release --out dist -m ${{ matrix.package }}/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ macos, windows, linux, linux-cross ]
    # needs: [ macos, linux, linux-cross ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          pip3 install --upgrade twine
          twine upload --skip-existing *